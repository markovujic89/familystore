// <auto-generated />
using System;
using FamilyStore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FamilyStore.Migrations
{
    [DbContext(typeof(FamilyStoreDbContext))]
    [Migration("20240408163328_'FixSubscriptionsRelationshipPatrTwo'")]
    partial class FixSubscriptionsRelationshipPatrTwo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CompanySubscription", b =>
                {
                    b.Property<Guid>("CompanySubscriptionsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SubscriptionsId")
                        .HasColumnType("int");

                    b.HasKey("CompanySubscriptionsId", "SubscriptionsId");

                    b.HasIndex("SubscriptionsId");

                    b.ToTable("CompanySubscription");
                });

            modelBuilder.Entity("FamilyStore.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("FamilyStore.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("FamilyStore.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SubscriptionUser", b =>
                {
                    b.Property<int>("SubscriptionsId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserSubscriptionsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SubscriptionsId", "UserSubscriptionsId");

                    b.HasIndex("UserSubscriptionsId");

                    b.ToTable("SubscriptionUser");
                });

            modelBuilder.Entity("CompanySubscription", b =>
                {
                    b.HasOne("FamilyStore.Models.Company", null)
                        .WithMany()
                        .HasForeignKey("CompanySubscriptionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FamilyStore.Models.Subscription", null)
                        .WithMany()
                        .HasForeignKey("SubscriptionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SubscriptionUser", b =>
                {
                    b.HasOne("FamilyStore.Models.Subscription", null)
                        .WithMany()
                        .HasForeignKey("SubscriptionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FamilyStore.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserSubscriptionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
